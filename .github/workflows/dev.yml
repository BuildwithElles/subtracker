name: Development CI

on:
  push:
    branches-ignore: [ main ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Quick validation for development branches
  quick-check:
    name: ⚡ Quick Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint check
        run: npm run lint
        
      - name: 📊 TypeScript check
        run: npx tsc --noEmit
        
      - name: 🏗️ Build check
        run: npm run build
        env:
          # Use placeholder values for build validation
          VITE_SUPABASE_URL: "https://placeholder.supabase.co"
          VITE_SUPABASE_ANON_KEY: "placeholder-key"

  # PR-specific checks
  pr-checks:
    name: 🔍 PR Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: quick-check
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better diff analysis
          
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 💅 Check formatting
        run: npm run format:check
        
      - name: 🧪 Run smoke tests
        run: |
          echo "Running basic smoke tests..."
          npm run build
          # Add basic smoke tests here when available
          
      - name: 📊 Check bundle size
        run: |
          npm run build
          du -sh dist/
          echo "Build size check completed"

  # Comment on PR with build results
  pr-comment:
    name: 💬 PR Status Comment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && always()
    needs: [quick-check, pr-checks]
    
    steps:
      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { needs } = context.payload.workflow_run || { needs: context.payload };
            
            let status = '✅ All checks passed!';
            let color = '28a745';
            
            if (needs.quick-check?.result === 'failure' || needs['pr-checks']?.result === 'failure') {
              status = '❌ Some checks failed';
              color = 'dc3545';
            } else if (needs.quick-check?.result === 'cancelled' || needs['pr-checks']?.result === 'cancelled') {
              status = '⏸️ Checks were cancelled';
              color = 'ffc107';
            }
            
            const body = `## 🤖 CI/CD Status
            
            ${status}
            
            ### Check Results:
            - **Linting**: ${needs.quick-check?.result === 'success' ? '✅' : needs.quick-check?.result === 'failure' ? '❌' : '⏸️'}
            - **TypeScript**: ${needs.quick-check?.result === 'success' ? '✅' : needs.quick-check?.result === 'failure' ? '❌' : '⏸️'}
            - **Build**: ${needs.quick-check?.result === 'success' ? '✅' : needs.quick-check?.result === 'failure' ? '❌' : '⏸️'}
            - **Formatting**: ${needs['pr-checks']?.result === 'success' ? '✅' : needs['pr-checks']?.result === 'failure' ? '❌' : '⏸️'}
            
            <sub>Generated by GitHub Actions • [View workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})</sub>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
